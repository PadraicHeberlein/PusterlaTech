{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useMemo } from 'react';\nimport { getAttributes, isStructTreeNode, isStructTreeNodeWithOnlyContentChild } from './shared/structTreeUtils.js';\nexport default function StructTreeItem({\n  className,\n  node\n}) {\n  const attributes = useMemo(() => getAttributes(node), [node]);\n  const children = useMemo(() => {\n    if (!isStructTreeNode(node)) {\n      return null;\n    }\n    if (isStructTreeNodeWithOnlyContentChild(node)) {\n      return null;\n    }\n    return node.children.map((child, index) => {\n      return (\n        // biome-ignore lint/suspicious/noArrayIndexKey: index is stable here\n        _jsx(StructTreeItem, {\n          node: child\n        }, index)\n      );\n    });\n  }, [node]);\n  return _jsx(\"span\", Object.assign({\n    className: className\n  }, attributes, {\n    children: children\n  }));\n}","map":{"version":3,"names":["jsx","_jsx","useMemo","getAttributes","isStructTreeNode","isStructTreeNodeWithOnlyContentChild","StructTreeItem","className","node","attributes","children","map","child","index","Object","assign"],"sources":["/home/padraic/Projects/PusterlaTech/node_modules/react-pdf/dist/esm/StructTreeItem.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useMemo } from 'react';\nimport { getAttributes, isStructTreeNode, isStructTreeNodeWithOnlyContentChild, } from './shared/structTreeUtils.js';\nexport default function StructTreeItem({ className, node, }) {\n    const attributes = useMemo(() => getAttributes(node), [node]);\n    const children = useMemo(() => {\n        if (!isStructTreeNode(node)) {\n            return null;\n        }\n        if (isStructTreeNodeWithOnlyContentChild(node)) {\n            return null;\n        }\n        return node.children.map((child, index) => {\n            return (\n            // biome-ignore lint/suspicious/noArrayIndexKey: index is stable here\n            _jsx(StructTreeItem, { node: child }, index));\n        });\n    }, [node]);\n    return (_jsx(\"span\", Object.assign({ className: className }, attributes, { children: children })));\n}\n"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,aAAa,EAAEC,gBAAgB,EAAEC,oCAAoC,QAAS,6BAA6B;AACpH,eAAe,SAASC,cAAcA,CAAC;EAAEC,SAAS;EAAEC;AAAM,CAAC,EAAE;EACzD,MAAMC,UAAU,GAAGP,OAAO,CAAC,MAAMC,aAAa,CAACK,IAAI,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAC7D,MAAME,QAAQ,GAAGR,OAAO,CAAC,MAAM;IAC3B,IAAI,CAACE,gBAAgB,CAACI,IAAI,CAAC,EAAE;MACzB,OAAO,IAAI;IACf;IACA,IAAIH,oCAAoC,CAACG,IAAI,CAAC,EAAE;MAC5C,OAAO,IAAI;IACf;IACA,OAAOA,IAAI,CAACE,QAAQ,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;MACvC;QACA;QACAZ,IAAI,CAACK,cAAc,EAAE;UAAEE,IAAI,EAAEI;QAAM,CAAC,EAAEC,KAAK;MAAC;IAChD,CAAC,CAAC;EACN,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;EACV,OAAQP,IAAI,CAAC,MAAM,EAAEa,MAAM,CAACC,MAAM,CAAC;IAAER,SAAS,EAAEA;EAAU,CAAC,EAAEE,UAAU,EAAE;IAAEC,QAAQ,EAAEA;EAAS,CAAC,CAAC,CAAC;AACrG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}